{"version":3,"sources":["index.js"],"names":["directions","Down","start","i","Across","mapWord","word","dir","d","s","mapDirection","Array","from","w","map","l","calculatePad","crossword","pad","Object","words","guess","shuffle","array","slice","length","j","Math","floor","random","Guessbox","props","state","letters","x","used","value","this","onGuess","clear","setState","last","letter","find","className","onClick","e","handleClick","handleDelete","renderLetter","handleShuffle","handleClear","handleSubmit","React","Component","range","iter","push","Game","history","guesses","cols","size","rows","f","isw","repeat","concat","filter","isRepeatGuess","hit","k","known","unused","newState","console","log","y","cell","hint","p","opt","undefined","hintLimit","handleHint","renderCell","renderRow","sort","renderPad","handleGuess","App","crosswords","idx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.386ad5f3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst directions = {\n    Down: start => (i => [start[0], start[1] + i]),\n    Across: start => (i => [start[0] + i, start[1]])\n};\n\nfunction mapDirection(word) {\n    return directions[word.d](word.s)\n}\n\nfunction mapWord(word) {\n    const dir = mapDirection(word);\n    const letters = Array.from(word.w);\n    const items = letters.map((l,i) => [l, dir(i)]);\n    return items;\n}\n\nfunction calculatePad(crossword) {\n    let pad = Object();\n    for(const word of crossword.words) {\n        for(const [l, pos] of mapWord(word)) {\n            pad[pos] = {\n                l:l,\n                guess:null\n            };\n        }\n    }\n    return pad;\n}\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nfunction shuffle(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nclass Guessbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            letters: props.letters.map((x) => ({l: x, used: false})),\n            value: \"\"\n        }\n    }\n\n    handleSubmit() {\n        if (this.state.value.length < 3)\n            return;\n        this.props.onGuess(this.state.value);\n        this.clear();\n    }\n\n    handleShuffle() {\n        this.setState({\n            ...this.state,\n            letters: shuffle(this.state.letters)\n        })\n    }\n\n    handleClear() {\n        this.clear();\n    }\n\n    handleDelete() {\n        const last = this.state.value.slice(-1);\n        const letter = this.state.letters.find(l => (l.used && l.l == last))\n        this.setState({\n            ...this.state,\n            letters: this.state.letters.map(l => (l === letter) ? {...l, used:false} : l),\n            value: this.state.value.slice(0, -1)\n        })\n    }\n\n    clear() {\n        this.setState({\n            ...this.state,\n            letters: this.state.letters.map(l => ({...l, used:false})),\n            value: \"\"\n        })\n    }\n\n    handleClick(i) {\n        if (this.state.letters[i].used)\n            return;\n        const letters = this.state.letters.slice();\n        letters[i].used = true;\n        const value = this.state.value + letters[i].l\n        this.setState({\n            ...this.state,\n            letters: letters,\n            value: value\n        })\n    }\n\n    renderLetter(l, i) {\n        if (l.used) {\n            return (\n                <span key={i}\n                      className=\"cell used\">\n                    {l.l}\n                </span>\n            );\n        } else {\n            return (\n                <span key={i}\n                      className=\"cell available\"\n                      onClick={(e) => this.handleClick(i)}>\n                    {l.l}\n                </span>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"guessbox\">\n                <div className=\"word\">\n                    <span key=\"x\"\n                          className=\"letter\">\n                        :\n                    </span>\n                    {Array.from(this.state.value).map((l,i) => (\n                        <span key={i}\n                              className=\"letter\">\n                            {l}\n                        </span>\n                    ))}\n                    <button onClick={(e)=>this.handleDelete()}>⏪</button>\n                </div>\n                <div className=\"chooser\">\n                    {this.state.letters.map((l,i) => this.renderLetter(l, i))}\n                </div>\n                <div className=\"actions\">\n                    <button onClick={(e) => this.handleShuffle()}>\n                        Shuffle\n                    </button>\n                    <button onClick={(e) => this.handleClear()}>\n                        Clear\n                    </button>\n                    <button onClick={(e) => this.handleSubmit()}\n                            className=\"go\">\n                        Go\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\nfunction range(x) {\n    let iter = [];\n    for(let i = 0; i < x; i++) {\n        iter.push(i);\n    }\n    return iter;\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [],\n            pad: calculatePad(props.crossword),\n            guesses: [],\n            cols: range(props.crossword.size[0]),\n            rows: range(props.crossword.size[1]),\n            crossword: props.crossword\n        };\n    }\n\n    isRepeatGuess(w) {\n        let history = this.state.history;\n        const isw = x => x.w === w;\n        const fnot = f => ((...args) => !f(...args))\n        const repeat = history.find(isw)\n        if (repeat) {\n            history = [\n                {\n                    ...repeat,\n                    repeat: 1 + (repeat.repeat || 0)}\n            ].concat(history.filter(fnot(isw)))\n            this.setState({\n                ...this.state,\n                history: history\n            });\n            return true;\n        }\n        return false;\n    }\n\n    handleGuess(w) {\n        if (this.isRepeatGuess(w)) {\n            return;\n        }\n        let history = this.state.history;\n        let guesses = this.state.guesses;\n        let pad = this.state.pad;\n        const hit = this.props.crossword.words.find(x=>x.w===w);\n        if (hit) {\n            pad = {...this.state.pad}\n            guesses = guesses.concat([w])\n            history = [{w:w, k:history.length, guess:true}].concat(history)\n            for(const [l, pos] of mapWord(hit)) {\n                pad[pos] = {\n                    l:l,\n                    guess:guesses.length\n                };\n            }\n        } else {\n            const known = this.props.crossword.unused.find(x=>x===w);\n            history = [{w:w, k:history.length, guess:false, known:!!known}].concat(history)\n        }\n        const newState = {\n            ...this.state,\n            history: history,\n            pad: pad,\n            guesses: guesses\n        };\n        console.log(w, hit, newState);\n        this.setState(newState);\n    }\n\n    handleHint(x,y) {\n        let history = this.state.history;\n        let pad = {...this.state.pad};\n        let cell = pad[[x,y]];\n        const w = (\"?\" + x + ',' + y);\n        history = [{x:x, y:y,\n                    k:history.length,\n                    hint:cell.l,\n                    w: w\n                   }].concat(history);\n        pad[[x,y]] = {\n            ...cell,\n            hint: 1 + (cell.hint || 0)\n        };\n        this.setState({\n            ...this.state,\n            history: history,\n            pad: pad\n        });\n    }\n\n    renderCell(x,y) {\n        let p = this.state.pad[[x,y]];\n        let k = x;\n        let l;\n        let opt = {};\n        if (p === undefined) {\n            opt.className=\"cell void\";\n            l=\"\";\n        } else if (p.guess === null && (p.hint || 0) < this.props.hintLimit) {\n            opt.className=\"cell empty\";\n            opt.onClick = e => this.handleHint(x,y);\n            l=\" \";\n        } else if (p.guess < this.state.guesses.length) {\n            opt.className=\"cell solved\";\n            l=p.l;\n        } else {\n            opt.className=\"cell solved guessed\";\n            l=p.l;\n        }\n\n        if (p && p.hint && p.hint >= this.props.hintLimit) {\n            opt.className += \" hint\";\n        }\n\n        return (\n            <td key={k}>\n                <div {...opt}>\n                    <span>{l}</span>\n                </div>\n            </td>\n        );\n    }\n\n    renderRow(y) {\n        return (\n            <tr className=\"board-row\" key={y}>\n                {this.state.cols.map(x => this.renderCell(x,y))}\n            </tr>\n        );\n    }\n\n    renderPad() {\n        return (\n            <div className=\"board\">\n                <table className=\"board\">\n                    <tbody>\n                        {this.state.rows.map(y => this.renderRow(y))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    render() {\n        const letters = Array.from(this.props.crossword.letters).slice().sort();\n        return (\n            <div className=\"game\">\n                {this.renderPad()}\n                <br/>\n                <div className=\"guessbox\">\n                    <Guessbox\n                        letters={letters}\n                        onGuess={(w) => this.handleGuess(w)}\n                    />\n                </div>\n                <div className=\"history\">\n                    <ul>\n                        {this.state.history.map((w,i)=>(\n                            <li key={w.k}\n                                className={((w.guess) ? \"guess\" :\n                                            ((w.known) ? \"known\" : \"weird\"))}>\n                                {w.w} {w.repeat &&\n                                       <span>\n                                           {\"➰\".repeat(w.repeat)}\n                                       </span>}\n                            </li>))}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        let crosswords = [{\n            \"size\": [10, 11],\n            \"letters\": \"nemudoma\",\n            \"words\": [\n                {\"d\": \"Across\", \"w\": \"amd\", \"s\": [4, 8]},\n                {\"d\": \"Across\", \"w\": \"amen\", \"s\": [6, 9]},\n                {\"d\": \"Down\", \"w\": \"ane\", \"s\": [2, 1]},\n                {\"d\": \"Down\", \"w\": \"dam\", \"s\": [4, 7]},\n                {\"d\": \"Across\", \"w\": \"dan\", \"s\": [1, 5]},\n                {\"d\": \"Across\", \"w\": \"dano\", \"s\": [1, 1]},\n                {\"d\": \"Across\", \"w\": \"dno\", \"s\": [6, 1]},\n                {\"d\": \"Across\", \"w\": \"dom\", \"s\": [7, 5]},\n                {\"d\": \"Down\", \"w\": \"doma\", \"s\": [8, 0]},\n                {\"d\": \"Down\", \"w\": \"domu\", \"s\": [4, 0]},\n                {\"d\": \"Down\", \"w\": \"don\", \"s\": [5, 3]},\n                {\"d\": \"Down\", \"w\": \"duo\", \"s\": [6, 1]},\n                {\"d\": \"Down\", \"w\": \"med\", \"s\": [7, 3]},\n                {\"d\": \"Down\", \"w\": \"menda\", \"s\": [3, 3]},\n                {\"d\": \"Across\", \"w\": \"nad\", \"s\": [2, 7]},\n                {\"d\": \"Down\", \"w\": \"ned\", \"s\": [1, 3]},\n                {\"d\": \"Down\", \"w\": \"nem\", \"s\": [2, 7]},\n                {\"d\": \"Across\", \"w\": \"nemudoma\", \"s\": [1, 3]},\n                {\"d\": \"Down\", \"w\": \"oda\", \"s\": [6, 7]},\n                {\"d\": \"Across\", \"w\": \"oman\", \"s\": [6, 7]},\n                {\"d\": \"Down\", \"w\": \"ona\", \"s\": [8, 5]},\n                {\"d\": \"Across\", \"w\": \"one\", \"s\": [0, 8]}],\n            \"unused\": [\"modem\", \"domen\", \"moda\", \"ano\", \"emu\",\n                       \"domena\", \"duma\", \"mona\", \"dona\", \"eon\",\n                       \"mena\", \"onda\", \"demon\", \"amon\", \"nomad\",\n                       \"meno\", \"neo\", \"dao\", \"omen\", \"neum\", \"mone\",\n                       \"medo\", \"oma\", \"moden\", \"memo\", \"meda\",\n                       \"umen\", \"nom\", \"moa\", \"mamon\", \"omamen\",\n                       \"noma\", \"mond\", \"mun\", \"neuma\"]},\n                          {\"size\": [10, 7], \"letters\": \"fizi\\u010den\",\n                           \"words\": [{\"d\": \"Across\", \"w\": \"fen\", \"s\": [3, 5]},\n                                     {\"d\": \"Down\", \"w\": \"fin\", \"s\": [1, 3]},\n                                     {\"d\": \"Across\", \"w\": \"fizi\\u010den\", \"s\": [1, 3]},\n                                     {\"d\": \"Down\", \"w\": \"fi\\u010d\", \"s\": [8, 0]},\n                                     {\"d\": \"Across\", \"w\": \"ini\", \"s\": [6, 1]},\n                                     {\"d\": \"Down\", \"w\": \"niz\", \"s\": [3, 1]},\n                                     {\"d\": \"Down\", \"w\": \"ni\\u010d\", \"s\": [7, 3]},\n                                     {\"d\": \"Down\", \"w\": \"ni\\u010de\", \"s\": [6, 0]},\n                                     {\"d\": \"Across\", \"w\": \"zen\", \"s\": [1, 1]},\n                                     {\"d\": \"Across\", \"w\": \"\\u010dez\", \"s\": [7, 5]},\n                                     {\"d\": \"Down\", \"w\": \"\\u010din\", \"s\": [5, 3]}],\n                           \"unused\": []},\n                          {\"size\": [10, 11], \"letters\": \"coprati\",\n                           \"words\": [{\"d\": \"Down\", \"w\": \"art\", \"s\": [2, 7]},\n                                     {\"d\": \"Across\", \"w\": \"cia\", \"s\": [0, 7]},\n                                     {\"d\": \"Across\", \"w\": \"coprati\", \"s\": [0, 5]}, {\"d\": \"Down\", \"w\": \"ort\", \"s\": [8, 8]}, {\"d\": \"Down\", \"w\": \"par\", \"s\": [7, 6]}, {\"d\": \"Across\", \"w\": \"pari\", \"s\": [1, 3]}, {\"d\": \"Across\", \"w\": \"pat\", \"s\": [0, 9]}, {\"d\": \"Across\", \"w\": \"pir\", \"s\": [7, 6]}, {\"d\": \"Down\", \"w\": \"pot\", \"s\": [8, 2]}, {\"d\": \"Down\", \"w\": \"pri\", \"s\": [6, 3]}, {\"d\": \"Across\", \"w\": \"pro\", \"s\": [6, 3]}, {\"d\": \"Down\", \"w\": \"proti\", \"s\": [1, 3]}, {\"d\": \"Across\", \"w\": \"prt\", \"s\": [4, 9]}, {\"d\": \"Down\", \"w\": \"ptica\", \"s\": [4, 1]}, {\"d\": \"Across\", \"w\": \"rop\", \"s\": [7, 8]}, {\"d\": \"Down\", \"w\": \"tip\", \"s\": [4, 7]}, {\"d\": \"Across\", \"w\": \"tipa\", \"s\": [4, 7]}, {\"d\": \"Across\", \"w\": \"top\", \"s\": [2, 1]}, {\"d\": \"Down\", \"w\": \"tra\", \"s\": [2, 1]}, {\"d\": \"Down\", \"w\": \"tri\", \"s\": [5, 5]}], \"unused\": [\"ropa\", \"pota\", \"opat\", \"tir\", \"por\", \"ati\", \"rio\", \"opira\", \"car\", \"trio\", \"cipra\", \"port\", \"trop\", \"rit\", \"porta\", \"trp\", \"copat\", \"oprati\", \"rac\", \"opica\", \"api\", \"oprta\", \"rap\", \"irt\", \"otip\", \"cap\", \"tari\", \"copati\", \"tor\", \"tropa\", \"trip\", \"pirat\", \"trap\", \"oprt\", \"pita\", \"part\", \"rita\", \"ric\", \"potica\", \"ica\", \"prati\", \"cri\", \"rota\", \"tora\", \"opa\", \"pica\", \"pora\", \"tica\", \"arco\", \"cip\", \"prta\", \"tropi\", \"capo\", \"ratio\", \"orati\", \"pira\", \"cora\", \"ropati\", \"tap\", \"capri\", \"cita\", \"prot\", \"cotar\", \"pair\", \"ciao\", \"prat\", \"racio\", \"piar\", \"cop\", \"cota\", \"cipa\", \"irta\", \"oti\", \"otar\", \"aport\", \"pato\"]},\n                          {\"size\": [10, 10], \"letters\": \"trapeza\", \"words\": [{\"d\": \"Down\", \"w\": \"art\", \"s\": [2, 0]}, {\"d\": \"Down\", \"w\": \"ata\", \"s\": [1, 3]}, {\"d\": \"Down\", \"w\": \"ate\", \"s\": [6, 0]}, {\"d\": \"Down\", \"w\": \"era\", \"s\": [4, 6]}, {\"d\": \"Down\", \"w\": \"eta\", \"s\": [4, 0]}, {\"d\": \"Across\", \"w\": \"etapa\", \"s\": [5, 5]}, {\"d\": \"Down\", \"w\": \"par\", \"s\": [8, 1]}, {\"d\": \"Down\", \"w\": \"para\", \"s\": [7, 4]}, {\"d\": \"Across\", \"w\": \"pare\", \"s\": [0, 5]}, {\"d\": \"Across\", \"w\": \"pat\", \"s\": [3, 4]}, {\"d\": \"Down\", \"w\": \"pater\", \"s\": [5, 2]}, {\"d\": \"Across\", \"w\": \"per\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"pet\", \"s\": [3, 4]}, {\"d\": \"Across\", \"w\": \"peta\", \"s\": [1, 8]}, {\"d\": \"Down\", \"w\": \"pre\", \"s\": [8, 7]}, {\"d\": \"Across\", \"w\": \"rape\", \"s\": [6, 7]}, {\"d\": \"Down\", \"w\": \"rep\", \"s\": [2, 7]}, {\"d\": \"Down\", \"w\": \"rez\", \"s\": [6, 7]}, {\"d\": \"Across\", \"w\": \"ter\", \"s\": [3, 6]}, {\"d\": \"Across\", \"w\": \"trapeza\", \"s\": [2, 2]}], \"unused\": [\"teza\", \"petar\", \"reza\", \"repa\", \"raz\", \"prt\", \"trp\", \"zeta\", \"zet\", \"tara\", \"rap\", \"pera\", \"trap\", \"paz\", \"part\", \"rapa\", \"ara\", \"area\", \"trapa\", \"prta\", \"zara\", \"tap\", \"parte\", \"peza\", \"raza\", \"tra\", \"prat\", \"parta\", \"trapez\", \"prata\", \"arpa\", \"pazar\", \"zar\", \"zatrep\", \"trz\", \"ret\"]},\n                          {\"size\": [11, 10], \"letters\": \"lepoti\\u010dka\", \"words\": [{\"d\": \"Down\", \"w\": \"akt\", \"s\": [4, 7]}, {\"d\": \"Across\", \"w\": \"ali\", \"s\": [1, 6]}, {\"d\": \"Across\", \"w\": \"kola\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"kot\", \"s\": [8, 3]}, {\"d\": \"Down\", \"w\": \"lepa\", \"s\": [6, 5]}, {\"d\": \"Across\", \"w\": \"lepoti\\u010dka\", \"s\": [1, 3]}, {\"d\": \"Down\", \"w\": \"let\", \"s\": [2, 6]}, {\"d\": \"Down\", \"w\": \"leta\", \"s\": [1, 3]}, {\"d\": \"Across\", \"w\": \"leto\", \"s\": [6, 5]}, {\"d\": \"Down\", \"w\": \"o\\u010de\", \"s\": [2, 1]}, {\"d\": \"Across\", \"w\": \"plat\", \"s\": [6, 1]}, {\"d\": \"Down\", \"w\": \"pla\\u010d\", \"s\": [7, 0]}, {\"d\": \"Across\", \"w\": \"pot\", \"s\": [6, 7]}, {\"d\": \"Across\", \"w\": \"potek\", \"s\": [0, 8]}, {\"d\": \"Down\", \"w\": \"tako\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"tla\", \"s\": [9, 1]}, {\"d\": \"Down\", \"w\": \"tok\", \"s\": [8, 7]}], \"unused\": [\"pa\\u010d\", \"pol\", \"pet\", \"tak\", \"o\\u010di\", \"telo\", \"koli\", \"tik\", \"pokal\", \"ekipa\", \"lep\", \"to\\u010dka\", \"takole\", \"poleti\", \"kopa\\u010d\", \"peti\", \"pik\", \"loka\", \"plati\", \"tek\", \"klop\", \"ako\", \"paket\", \"tipa\", \"tal\", \"petka\", \"\\u010delo\", \"lek\", \"kleti\", \"pe\\u010di\", \"tip\", \"kota\", \"o\\u010ditek\", \"po\\u010deti\", \"tale\", \"peta\", \"\\u010dop\", \"pil\", \"itak\", \"pe\\u010dat\", \"lik\", \"pota\", \"teka\", \"te\\u010di\", \"po\\u010ditek\", \"polet\", \"pe\\u010d\", \"top\", \"kip\", \"kit\", \"pika\", \"lepota\", \"elita\", \"opat\", \"eta\", \"klet\", \"pel\", \"kapo\", \"pilot\", \"topel\", \"pakt\", \"o\\u010dka\", \"\\u010dok\", \"alpe\", \"kol\", \"etika\", \"paleto\", \"peti\\u010d\", \"ati\", \"\\u010dela\", \"kap\", \"tlak\", \"lok\", \"pak\", \"tipalo\", \"pekla\", \"lipa\", \"\\u010dile\", \"ko\\u010da\", \"pat\", \"pola\", \"kali\", \"pike\", \"pila\", \"teka\\u010d\", \"\\u010deta\", \"ple\\u010da\", \"peka\", \"\\u010det\", \"eti\", \"to\\u010da\", \"\\u010dip\", \"tipka\", \"pti\\u010d\", \"opel\", \"plot\", \"kal\", \"\\u010dek\", \"lat\", \"poka\", \"lipe\", \"opla\", \"eko\", \"pok\", \"paki\", \"lit\", \"ko\\u010d\", \"o\\u010dali\", \"\\u010dital\", \"apel\", \"to\\u010di\", \"poet\", \"klepa\\u010d\", \"poli\\u010d\", \"\\u010dopa\", \"ka\\u010d\", \"o\\u010ditka\", \"oli\", \"polt\", \"oklep\", \"topi\\u010d\", \"ila\", \"pi\\u010dlo\", \"\\u010deti\", \"alt\", \"kopati\", \"takle\", \"koti\", \"kotel\", \"kopel\", \"tolpa\", \"o\\u010da\", \"ti\\u010d\", \"kopal\", \"ilo\", \"kle\\u010d\", \"polka\", \"kape\", \"pikl\", \"ki\\u010d\", \"kop\", \"\\u010dik\", \"kola\\u010d\", \"peki\", \"api\", \"optika\", \"poetika\", \"klati\", \"kotla\", \"pek\", \"kopa\", \"lot\", \"eto\", \"pal\\u010dek\", \"kapi\\u010d\", \"\\u010deka\", \"pi\\u010del\", \"poeta\", \"opeka\", \"laik\", \"petak\", \"po\\u010dek\", \"kita\", \"\\u010dil\", \"tika\", \"otip\", \"kepa\", \"peklo\", \"petko\", \"kopi\\u010d\", \"pti\\u010de\", \"polk\", \"o\\u010dek\", \"pilo\", \"pelo\", \"potika\", \"tol\\u010di\", \"poli\", \"\\u010dokat\", \"pokati\", \"pti\\u010dka\", \"kali\\u010d\", \"pita\", \"le\\u010di\", \"\\u010dita\", \"pti\\u010dek\", \"letak\", \"lak\", \"alo\", \"kopat\", \"le\\u010do\", \"atek\", \"lopati\", \"plato\", \"ti\\u010da\", \"teli\\u010dka\", \"liko\", \"laket\", \"\\u010dipka\", \"tol\", \"poetik\", \"ple\\u010d\", \"opa\", \"polke\", \"pe\\u010da\", \"klep\", \"o\\u010dak\", \"aki\", \"teko\", \"lopa\", \"atol\", \"pe\\u010dal\", \"le\\u010da\", \"\\u010dokati\", \"po\\u010d\", \"lop\", \"ikt\", \"peka\\u010d\", \"lo\\u010d\", \"tolk\", \"laki\", \"ple\\u010dat\", \"pe\\u010dka\", \"klopa\", \"italo\", \"kep\", \"pa\\u010di\", \"plitek\", \"tolik\", \"pieta\", \"tle\", \"tepka\", \"toli\", \"tola\", \"ate\", \"kila\", \"tap\", \"\\u010dep\", \"tila\", \"tali\", \"optik\", \"tikal\", \"lakot\", \"etik\", \"olika\", \"epika\", \"ti\\u010dek\", \"tle\\u010di\", \"lepak\", \"toplek\", \"tekila\", \"laki\\u010d\", \"opal\", \"pilotka\", \"oka\", \"\\u010dap\", \"kapitol\", \"\\u010dak\", \"otela\", \"pako\", \"plitka\", \"\\u010dao\", \"otep\", \"potka\", \"li\\u010dka\", \"kli\", \"poli\\u010dek\", \"ilka\", \"kle\\u010dati\", \"kaptol\", \"eia\", \"pole\\u010di\", \"\\u010dopka\", \"til\", \"kle\\u010da\", \"plet\", \"kopt\", \"\\u010doka\", \"alk\", \"ti\\u010dka\", \"itako\", \"oti\", \"oklepati\", \"ipak\", \"to\\u010d\", \"tolka\\u010d\", \"kotli\\u010d\", \"pi\\u010dka\", \"topika\", \"\\u010delika\", \"pe\\u010dak\", \"poklati\", \"opeka\\u010d\", \"klo\", \"ke\\u010d\", \"pote\\u010di\", \"lo\\u010dek\", \"koli\\u010d\", \"okel\", \"\\u010depa\", \"klope\", \"kolt\", \"klip\", \"kilt\", \"kelt\", \"ope\\u010di\", \"klap\", \"pilka\", \"ke\\u010dap\", \"kalo\", \"epik\", \"akel\", \"eki\", \"tkalo\", \"pleti\", \"pato\", \"otka\"]},\n                          {\"size\": [11, 10], \"letters\": \"\\u0161ahiranje\", \"words\": [{\"d\": \"Across\", \"w\": \"aha\", \"s\": [2, 8]}, {\"d\": \"Down\", \"w\": \"aja\", \"s\": [1, 5]}, {\"d\": \"Down\", \"w\": \"haj\", \"s\": [8, 7]}, {\"d\": \"Across\", \"w\": \"hej\", \"s\": [0, 3]}, {\"d\": \"Down\", \"w\": \"hi\\u0161a\", \"s\": [6, 0]}, {\"d\": \"Across\", \"w\": \"hi\\u0161na\", \"s\": [5, 1]}, {\"d\": \"Across\", \"w\": \"jan\", \"s\": [5, 3]}, {\"d\": \"Down\", \"w\": \"jar\", \"s\": [2, 7]}, {\"d\": \"Across\", \"w\": \"jara\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"jih\", \"s\": [2, 3]}, {\"d\": \"Down\", \"w\": \"naj\", \"s\": [7, 3]}, {\"d\": \"Down\", \"w\": \"na\\u0161\", \"s\": [6, 5]}, {\"d\": \"Across\", \"w\": \"raj\", \"s\": [0, 7]}, {\"d\": \"Down\", \"w\": \"raja\", \"s\": [4, 5]}, {\"d\": \"Down\", \"w\": \"raje\", \"s\": [1, 0]}, {\"d\": \"Down\", \"w\": \"raj\\u0161i\", \"s\": [9, 0]}, {\"d\": \"Down\", \"w\": \"ra\\u0161\", \"s\": [3, 0]}, {\"d\": \"Across\", \"w\": \"\\u0161ah\", \"s\": [6, 7]}, {\"d\": \"Across\", \"w\": \"\\u0161ahiranje\", \"s\": [0, 5]}], \"unused\": [\"hrana\", \"era\", \"ane\", \"ran\", \"rana\", \"ina\", \"jera\", \"ra\\u0161a\", \"hren\", \"arena\", \"rajh\", \"nehaj\", \"ni\\u0161a\", \"rajha\", \"han\", \"ni\\u0161\", \"reja\", \"hja\", \"\\u0161ajn\", \"jen\", \"jerina\", \"arija\", \"rena\", \"je\\u0161\", \"aren\", \"jin\", \"\\u0161ara\", \"ara\", \"area\", \"rja\", \"rajni\", \"\\u0161en\", \"jeri\", \"nih\", \"jeran\", \"rej\", \"rije\", \"re\\u0161\", \"jaa\", \"jerin\", \"\\u0161ar\", \"naje\", \"hiranje\", \"\\u0161raj\", \"jer\", \"nara\", \"jare\", \"renij\", \"\\u0161in\", \"hara\", \"rajna\", \"hijena\", \"eia\", \"rajni\\u0161\", \"\\u0161ir\", \"nja\", \"harija\", \"jah\", \"nihaj\", \"arha\", \"\\u0161eri\", \"arni\", \"\\u0161erija\", \"nareja\", \"hinje\", \"hena\", \"hija\", \"naa\", \"\\u0161iren\", \"\\u0161er\", \"rin\", \"inje\", \"arhe\", \"hir\"]},\n                          {\"size\": [10, 11], \"letters\": \"tapravi\", \"words\": [{\"d\": \"Down\", \"w\": \"iva\", \"s\": [3, 0]}, {\"d\": \"Down\", \"w\": \"par\", \"s\": [1, 5]}, {\"d\": \"Across\", \"w\": \"piva\", \"s\": [0, 9]}, {\"d\": \"Down\", \"w\": \"prav\", \"s\": [8, 1]}, {\"d\": \"Across\", \"w\": \"pravi\", \"s\": [1, 2]}, {\"d\": \"Down\", \"w\": \"pri\", \"s\": [6, 4]}, {\"d\": \"Across\", \"w\": \"prvi\", \"s\": [6, 4]}, {\"d\": \"Down\", \"w\": \"riva\", \"s\": [3, 6]}, {\"d\": \"Down\", \"w\": \"rtv\", \"s\": [2, 2]}, {\"d\": \"Across\", \"w\": \"tapravi\", \"s\": [0, 6]}, {\"d\": \"Down\", \"w\": \"tip\", \"s\": [1, 0]}, {\"d\": \"Down\", \"w\": \"tri\", \"s\": [5, 0]}, {\"d\": \"Across\", \"w\": \"via\", \"s\": [2, 4]}, {\"d\": \"Down\", \"w\": \"vir\", \"s\": [7, 7]}, {\"d\": \"Down\", \"w\": \"vrat\", \"s\": [5, 6]}, {\"d\": \"Down\", \"w\": \"vrata\", \"s\": [4, 2]}, {\"d\": \"Across\", \"w\": \"vrati\", \"s\": [3, 8]}, {\"d\": \"Across\", \"w\": \"vrt\", \"s\": [7, 2]}], \"unused\": [\"pari\", \"tipa\", \"para\", \"art\", \"ata\", \"tir\", \"vita\", \"trava\", \"ati\", \"pat\", \"avt\", \"prt\", \"vip\", \"rit\", \"trp\", \"tara\", \"api\", \"pav\", \"rap\", \"irt\", \"tari\", \"trip\", \"pirat\", \"piv\", \"pir\", \"trap\", \"pita\", \"part\", \"rapa\", \"rita\", \"ara\", \"prati\", \"avra\", \"trapa\", \"prta\", \"vari\", \"var\", \"vata\", \"pava\", \"ava\", \"pira\", \"pravit\", \"tap\", \"varati\", \"vitra\", \"pair\", \"tra\", \"prat\", \"vatra\", \"tiara\", \"parta\", \"piar\", \"tvar\", \"atari\", \"prata\", \"arpa\", \"irta\", \"tvi\"]},\n                          {\"size\": [10, 10], \"letters\": \"fatalizem\", \"words\": [{\"d\": \"Across\", \"w\": \"ali\", \"s\": [7, 6]}, {\"d\": \"Down\", \"w\": \"ata\", \"s\": [1, 6]}, {\"d\": \"Across\", \"w\": \"eta\", \"s\": [3, 2]}, {\"d\": \"Across\", \"w\": \"fatalizem\", \"s\": [0, 4]}, {\"d\": \"Down\", \"w\": \"imela\", \"s\": [1, 0]}, {\"d\": \"Down\", \"w\": \"lat\", \"s\": [8, 0]}, {\"d\": \"Down\", \"w\": \"let\", \"s\": [8, 6]}, {\"d\": \"Down\", \"w\": \"leta\", \"s\": [7, 3]}, {\"d\": \"Across\", \"w\": \"mala\", \"s\": [5, 1]}, {\"d\": \"Down\", \"w\": \"mali\", \"s\": [5, 1]}, {\"d\": \"Across\", \"w\": \"malta\", \"s\": [5, 8]}, {\"d\": \"Across\", \"w\": \"mati\", \"s\": [0, 8]}, {\"d\": \"Across\", \"w\": \"met\", \"s\": [1, 1]}, {\"d\": \"Across\", \"w\": \"tam\", \"s\": [0, 6]}, {\"d\": \"Down\", \"w\": \"tem\", \"s\": [2, 4]}, {\"d\": \"Down\", \"w\": \"tema\", \"s\": [3, 1]}, {\"d\": \"Down\", \"w\": \"tif\", \"s\": [3, 7]}, {\"d\": \"Down\", \"w\": \"tim\", \"s\": [5, 6]}], \"unused\": [\"ime\", \"film\", \"tla\", \"zatem\", \"tal\", \"tale\", \"izlet\", \"meta\", \"meti\", \"zima\", \"mit\", \"faza\", \"miza\", \"time\", \"metal\", \"elita\", \"team\", \"mate\", \"azil\", \"teza\", \"ati\", \"fiat\", \"tama\", \"alfa\", \"eti\", \"zlat\", \"tima\", \"mita\", \"mat\", \"lit\", \"tamle\", \"zala\", \"alma\", \"ala\", \"mel\", \"ila\", \"zalet\", \"file\", \"alt\", \"zeta\", \"zet\", \"mil\", \"laz\", \"lama\", \"lame\", \"elfa\", \"mela\", \"zali\", \"metla\", \"zel\", \"ami\", \"mata\", \"mleti\", \"fatima\", \"laza\", \"lim\", \"fama\", \"fila\", \"zal\", \"mazati\", \"zmleti\", \"izmet\", \"atila\", \"tami\", \"tle\", \"fil\", \"ate\", \"zamet\", \"tila\", \"tali\", \"zameti\", \"taf\", \"zila\", \"amal\", \"zlet\", \"altea\", \"lata\", \"eia\", \"til\", \"lift\", \"efa\", \"lem\", \"feta\", \"atemi\", \"lema\", \"izem\", \"fla\", \"metil\"]},\n                          {\"size\": [11, 10], \"letters\": \"misti\\u010den\", \"words\": [{\"d\": \"Across\", \"w\": \"ime\", \"s\": [1, 4]}, {\"d\": \"Down\", \"w\": \"imeti\", \"s\": [9, 1]}, {\"d\": \"Across\", \"w\": \"isti\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"iti\", \"s\": [7, 7]}, {\"d\": \"Down\", \"w\": \"meni\", \"s\": [3, 3]}, {\"d\": \"Across\", \"w\": \"met\", \"s\": [2, 8]}, {\"d\": \"Down\", \"w\": \"mini\", \"s\": [4, 0]}, {\"d\": \"Across\", \"w\": \"misti\\u010den\", \"s\": [3, 3]}, {\"d\": \"Down\", \"w\": \"miti\", \"s\": [7, 0]}, {\"d\": \"Down\", \"w\": \"nem\", \"s\": [8, 5]}, {\"d\": \"Down\", \"w\": \"nit\", \"s\": [4, 6]}, {\"d\": \"Across\", \"w\": \"niti\", \"s\": [6, 1]}, {\"d\": \"Across\", \"w\": \"ni\\u010d\", \"s\": [8, 5]}, {\"d\": \"Down\", \"w\": \"sem\", \"s\": [2, 6]}, {\"d\": \"Across\", \"w\": \"sin\", \"s\": [2, 6]}, {\"d\": \"Down\", \"w\": \"tem\", \"s\": [6, 3]}, {\"d\": \"Down\", \"w\": \"tim\", \"s\": [1, 3]}, {\"d\": \"Across\", \"w\": \"\\u010dim\", \"s\": [6, 7]}], \"unused\": [\"mest\", \"istem\", \"sit\", \"mesti\", \"smeti\", \"tenis\", \"meti\", \"te\\u010di\", \"mit\", \"me\\u010d\", \"time\", \"\\u010dist\", \"sen\", \"se\\u010di\", \"net\", \"\\u010det\", \"sten\", \"eti\", \"sim\", \"set\", \"ten\", \"\\u010deti\", \"\\u010din\", \"sneti\", \"ti\\u010d\", \"siten\", \"sine\", \"ste\\u010di\", \"nesti\", \"sti\", \"eis\", \"mesi\\u010d\", \"tin\", \"ini\", \"meniti\", \"mis\", \"semi\", \"smet\", \"se\\u010d\", \"ni\\u010de\", \"metin\", \"ne\\u010dist\", \"sini\\u010d\", \"snet\", \"tein\", \"ni\\u010des\", \"ni\\u010dti\"]},\n                          {\"size\": [11, 10], \"letters\": \"zelenkast\", \"words\": [{\"d\": \"Down\", \"w\": \"elan\", \"s\": [6, 2]}, {\"d\": \"Across\", \"w\": \"las\", \"s\": [7, 6]}, {\"d\": \"Down\", \"w\": \"lek\", \"s\": [7, 6]}, {\"d\": \"Down\", \"w\": \"let\", \"s\": [5, 0]}, {\"d\": \"Down\", \"w\": \"leta\", \"s\": [1, 3]}, {\"d\": \"Across\", \"w\": \"nas\", \"s\": [0, 6]}, {\"d\": \"Down\", \"w\": \"nek\", \"s\": [7, 0]}, {\"d\": \"Down\", \"w\": \"neka\", \"s\": [4, 4]}, {\"d\": \"Down\", \"w\": \"seka\", \"s\": [9, 6]}, {\"d\": \"Down\", \"w\": \"stal\", \"s\": [2, 6]}, {\"d\": \"Across\", \"w\": \"tak\", \"s\": [5, 8]}, {\"d\": \"Down\", \"w\": \"tale\", \"s\": [3, 1]}, {\"d\": \"Across\", \"w\": \"teka\", \"s\": [5, 2]}, {\"d\": \"Down\", \"w\": \"tla\", \"s\": [8, 4]}, {\"d\": \"Across\", \"w\": \"tlak\", \"s\": [0, 8]}, {\"d\": \"Across\", \"w\": \"zelenkast\", \"s\": [0, 4]}, {\"d\": \"Across\", \"w\": \"zlat\", \"s\": [0, 1]}], \"unused\": [\"kazen\", \"san\", \"enak\", \"znak\", \"znesek\", \"senat\", \"last\", \"tek\", \"akt\", \"tal\", \"les\", \"lesa\", \"stekel\", \"zelena\", \"letna\", \"kan\", \"knez\", \"eta\", \"klet\", \"teza\", \"lasten\", \"stan\", \"sen\", \"ane\", \"slak\", \"zatekel\", \"sena\", \"net\", \"stena\", \"sten\", \"aneks\", \"steza\", \"tele\", \"tesna\", \"kal\", \"zelen\", \"lat\", \"ete\", \"kneza\", \"kant\", \"sel\", \"sla\", \"set\", \"lesen\", \"tesen\", \"len\", \"stalen\", \"nak\", \"tank\", \"kaz\", \"nesla\", \"lan\", \"natek\", \"ten\", \"zalet\", \"sak\", \"alt\", \"sela\", \"takle\", \"zeta\", \"zet\", \"steka\", \"lesk\", \"laz\", \"sekta\", \"klas\", \"nat\", \"nalet\", \"tenka\", \"teke\", \"klan\", \"zen\", \"skelet\", \"zaselek\", \"lene\", \"sekt\", \"sat\", \"tesla\", \"letak\", \"lak\", \"leska\", \"zel\", \"atek\", \"tenek\", \"ska\", \"laket\", \"eks\", \"enes\", \"kes\", \"kesa\", \"lenta\", \"steklen\", \"sek\", \"sene\", \"zelenka\", \"zal\", \"sanke\", \"asket\", \"slan\", \"tle\", \"ate\", \"kas\", \"teleks\", \"enka\", \"lesket\", \"sake\", \"kneset\", \"laks\", \"selen\", \"kenta\", \"skat\", \"zas\", \"zlet\", \"tlesk\", \"klen\", \"senta\", \"akne\", \"stanek\", \"alk\", \"stela\", \"skela\", \"lateks\", \"senka\", \"netek\", \"snet\", \"tnk\", \"stek\", \"naz\", \"kasne\", \"kelt\", \"tesa\", \"akel\", \"kasten\", \"tenk\", \"etan\", \"zek\"]},\n                          {\"size\": [11, 10], \"letters\": \"invalid\", \"words\": [{\"d\": \"Down\", \"w\": \"ali\", \"s\": [8, 3]}, {\"d\": \"Across\", \"w\": \"dan\", \"s\": [5, 7]}, {\"d\": \"Down\", \"w\": \"din\", \"s\": [2, 7]}, {\"d\": \"Down\", \"w\": \"divan\", \"s\": [9, 5]}, {\"d\": \"Across\", \"w\": \"dlan\", \"s\": [6, 1]}, {\"d\": \"Across\", \"w\": \"dva\", \"s\": [2, 2]}, {\"d\": \"Across\", \"w\": \"ida\", \"s\": [0, 1]}, {\"d\": \"Down\", \"w\": \"ila\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"ina\", \"s\": [6, 3]}, {\"d\": \"Across\", \"w\": \"invalid\", \"s\": [3, 5]}, {\"d\": \"Across\", \"w\": \"iva\", \"s\": [7, 8]}, {\"d\": \"Across\", \"w\": \"ivan\", \"s\": [6, 3]}, {\"d\": \"Down\", \"w\": \"lani\", \"s\": [7, 5]}, {\"d\": \"Down\", \"w\": \"liv\", \"s\": [7, 1]}, {\"d\": \"Down\", \"w\": \"nad\", \"s\": [2, 0]}, {\"d\": \"Across\", \"w\": \"vadi\", \"s\": [0, 7]}, {\"d\": \"Across\", \"w\": \"val\", \"s\": [1, 4]}, {\"d\": \"Down\", \"w\": \"vid\", \"s\": [5, 5]}, {\"d\": \"Down\", \"w\": \"vila\", \"s\": [1, 4]}, {\"d\": \"Down\", \"w\": \"vili\", \"s\": [3, 2]}], \"unused\": [\"via\", \"davi\", \"linda\", \"lan\", \"lina\", \"diva\", \"vdan\", \"dina\", \"idila\", \"naliv\", \"dia\", \"ini\", \"navil\", \"div\", \"dai\", \"vladin\", \"nav\", \"inda\", \"vani\", \"vidin\", \"lavin\", \"dil\", \"dila\"]},\n                          {\"size\": [11, 10], \"letters\": \"breznica\", \"words\": [{\"d\": \"Across\", \"w\": \"ane\", \"s\": [6, 2]}, {\"d\": \"Across\", \"w\": \"ban\", \"s\": [1, 6]}, {\"d\": \"Down\", \"w\": \"bar\", \"s\": [5, 6]}, {\"d\": \"Across\", \"w\": \"bazen\", \"s\": [5, 6]}, {\"d\": \"Across\", \"w\": \"bir\", \"s\": [4, 1]}, {\"d\": \"Across\", \"w\": \"brce\", \"s\": [1, 3]}, {\"d\": \"Down\", \"w\": \"brez\", \"s\": [4, 1]}, {\"d\": \"Across\", \"w\": \"cen\", \"s\": [8, 1]}, {\"d\": \"Down\", \"w\": \"cena\", \"s\": [8, 1]}, {\"d\": \"Down\", \"w\": \"enica\", \"s\": [9, 5]}, {\"d\": \"Across\", \"w\": \"izbranec\", \"s\": [2, 8]}, {\"d\": \"Down\", \"w\": \"niz\", \"s\": [3, 6]}, {\"d\": \"Down\", \"w\": \"rab\", \"s\": [1, 1]}, {\"d\": \"Down\", \"w\": \"rabi\", \"s\": [6, 1]}, {\"d\": \"Down\", \"w\": \"razen\", \"s\": [7, 4]}, {\"d\": \"Down\", \"w\": \"reza\", \"s\": [2, 3]}, {\"d\": \"Across\", \"w\": \"zbira\", \"s\": [4, 4]}], \"unused\": [\"neba\", \"izbran\", \"era\", \"riba\", \"bran\", \"ran\", \"car\", \"cia\", \"ina\", \"rez\", \"bric\", \"zec\", \"raz\", \"zbran\", \"baz\", \"bena\", \"izba\", \"zrnec\", \"rabin\", \"rac\", \"cezar\", \"zen\", \"brca\", \"zbir\", \"bre\", \"rena\", \"aren\", \"breza\", \"ric\", \"ica\", \"abe\", \"cri\", \"cin\", \"zenica\", \"ibe\", \"bizaren\", \"brica\", \"bia\", \"brna\", \"ibar\", \"caen\", \"brin\", \"nac\", \"brc\", \"arzen\", \"zebra\", \"bec\", \"riza\", \"ber\", \"cer\", \"zrnce\", \"erc\", \"naci\", \"cizar\", \"bac\", \"rezina\", \"ciba\", \"cian\", \"iba\", \"bira\", \"abi\", \"eia\", \"ribez\", \"benica\", \"zib\", \"nic\", \"brzin\", \"bez\", \"bazin\", \"brzina\", \"arni\", \"zar\", \"breznica\", \"ziba\", \"nerc\", \"naz\", \"beznica\", \"barin\", \"beza\", \"rin\", \"eci\", \"bri\"]},\n                          {\"size\": [10, 10], \"letters\": \"dihanje\", \"words\": [{\"d\": \"Down\", \"w\": \"ane\", \"s\": [2, 4]}, {\"d\": \"Down\", \"w\": \"dah\", \"s\": [6, 5]}, {\"d\": \"Down\", \"w\": \"dai\", \"s\": [4, 0]}, {\"d\": \"Down\", \"w\": \"dan\", \"s\": [3, 2]}, {\"d\": \"Down\", \"w\": \"dej\", \"s\": [1, 2]}, {\"d\": \"Down\", \"w\": \"dih\", \"s\": [3, 6]}, {\"d\": \"Across\", \"w\": \"dihanje\", \"s\": [3, 2]}, {\"d\": \"Down\", \"w\": \"hej\", \"s\": [8, 0]}, {\"d\": \"Down\", \"w\": \"hja\", \"s\": [5, 2]}, {\"d\": \"Down\", \"w\": \"ideja\", \"s\": [8, 4]}, {\"d\": \"Down\", \"w\": \"ina\", \"s\": [6, 0]}, {\"d\": \"Across\", \"w\": \"jaden\", \"s\": [5, 6]}, {\"d\": \"Across\", \"w\": \"jan\", \"s\": [1, 4]}, {\"d\": \"Across\", \"w\": \"jed\", \"s\": [1, 6]}, {\"d\": \"Down\", \"w\": \"jen\", \"s\": [1, 6]}, {\"d\": \"Across\", \"w\": \"jih\", \"s\": [7, 4]}, {\"d\": \"Across\", \"w\": \"nad\", \"s\": [7, 8]}, {\"d\": \"Down\", \"w\": \"naj\", \"s\": [7, 2]}, {\"d\": \"Across\", \"w\": \"nehaj\", \"s\": [1, 8]}], \"unused\": [\"ide\", \"ida\", \"han\", \"edin\", \"dina\", \"din\", \"ajde\", \"ajd\", \"hajdi\", \"dia\", \"jin\", \"heda\", \"ned\", \"nih\", \"ajdi\", \"jad\", \"had\", \"haj\", \"nadih\", \"hajd\", \"naje\", \"hijena\", \"eia\", \"inda\", \"nja\", \"jah\", \"nihaj\", \"hinje\", \"hena\", \"jedan\", \"hajde\", \"hija\", \"dien\", \"inje\"]},\n                          {\"size\": [10, 11], \"letters\": \"pravljica\", \"words\": [{\"d\": \"Down\", \"w\": \"ali\", \"s\": [8, 5]}, {\"d\": \"Across\", \"w\": \"cilj\", \"s\": [2, 9]}, {\"d\": \"Across\", \"w\": \"cipra\", \"s\": [1, 2]}, {\"d\": \"Down\", \"w\": \"jar\", \"s\": [5, 5]}, {\"d\": \"Down\", \"w\": \"para\", \"s\": [7, 0]}, {\"d\": \"Across\", \"w\": \"pav\", \"s\": [6, 3]}, {\"d\": \"Across\", \"w\": \"pij\", \"s\": [0, 7]}, {\"d\": \"Down\", \"w\": \"pil\", \"s\": [4, 7]}, {\"d\": \"Down\", \"w\": \"prav\", \"s\": [3, 2]}, {\"d\": \"Across\", \"w\": \"pravi\", \"s\": [4, 7]}, {\"d\": \"Across\", \"w\": \"pravljica\", \"s\": [0, 5]}, {\"d\": \"Down\", \"w\": \"pri\", \"s\": [6, 3]}, {\"d\": \"Down\", \"w\": \"prvi\", \"s\": [1, 4]}, {\"d\": \"Across\", \"w\": \"val\", \"s\": [6, 1]}, {\"d\": \"Down\", \"w\": \"vic\", \"s\": [1, 0]}, {\"d\": \"Down\", \"w\": \"vir\", \"s\": [4, 0]}], \"unused\": [\"pravica\", \"par\", \"pari\", \"iva\", \"piva\", \"lica\", \"april\", \"palica\", \"raj\", \"vila\", \"alica\", \"vala\", \"plava\", \"vaja\", \"vilar\", \"lipa\", \"car\", \"vaj\", \"pila\", \"via\", \"prijava\", \"raja\", \"cia\", \"alija\", \"pliva\", \"liv\", \"vip\", \"ala\", \"cvi\", \"livar\", \"ila\", \"palac\", \"rac\", \"riva\", \"jara\", \"api\", \"prija\", \"cila\", \"raca\", \"rap\", \"lava\", \"aja\", \"rjav\", \"cap\", \"lira\", \"valj\", \"piv\", \"arija\", \"pir\", \"pala\", \"rapa\", \"pvc\", \"ric\", \"ica\", \"avla\", \"ara\", \"cri\", \"avra\", \"valjar\", \"pica\", \"rja\", \"cip\", \"privaja\", \"vari\", \"var\", \"vica\", \"pava\", \"ril\", \"ava\", \"plav\", \"pilar\", \"pira\", \"jaa\", \"aca\", \"lavra\", \"racija\", \"cal\", \"capri\", \"capa\", \"plac\", \"vrl\", \"rival\", \"pair\", \"piar\", \"palacij\", \"alva\", \"cipa\", \"japi\", \"arpa\", \"vpij\", \"pavji\", \"jav\", \"plavica\", \"paca\", \"ral\", \"lavrica\", \"laj\", \"avija\", \"cala\", \"parica\", \"ajvar\", \"pajac\", \"jaca\", \"vija\"]},\n                          {\"size\": [10, 11], \"letters\": \"prevlada\", \"words\": [{\"d\": \"Across\", \"w\": \"dala\", \"s\": [4, 9]}, {\"d\": \"Down\", \"w\": \"dar\", \"s\": [7, 8]}, {\"d\": \"Across\", \"w\": \"del\", \"s\": [7, 8]}, {\"d\": \"Down\", \"w\": \"dpa\", \"s\": [7, 4]}, {\"d\": \"Down\", \"w\": \"dva\", \"s\": [8, 2]}, {\"d\": \"Down\", \"w\": \"dve\", \"s\": [8, 6]}, {\"d\": \"Across\", \"w\": \"lep\", \"s\": [2, 1]}, {\"d\": \"Down\", \"w\": \"lepa\", \"s\": [6, 1]}, {\"d\": \"Down\", \"w\": \"lev\", \"s\": [5, 4]}, {\"d\": \"Across\", \"w\": \"per\", \"s\": [0, 7]}, {\"d\": \"Down\", \"w\": \"prav\", \"s\": [4, 1]}, {\"d\": \"Down\", \"w\": \"pred\", \"s\": [2, 6]}, {\"d\": \"Across\", \"w\": \"prevlada\", \"s\": [2, 6]}, {\"d\": \"Across\", \"w\": \"rad\", \"s\": [0, 9]}, {\"d\": \"Down\", \"w\": \"red\", \"s\": [1, 3]}, {\"d\": \"Across\", \"w\": \"reda\", \"s\": [1, 3]}, {\"d\": \"Down\", \"w\": \"val\", \"s\": [5, 8]}, {\"d\": \"Across\", \"w\": \"vlada\", \"s\": [4, 4]}], \"unused\": [\"padel\", \"rada\", \"par\", \"vred\", \"real\", \"vera\", \"para\", \"predal\", \"led\", \"leva\", \"drava\", \"eva\", \"pel\", \"predala\", \"rep\", \"era\", \"alpe\", \"vladar\", \"reala\", \"vala\", \"plava\", \"vel\", \"pare\", \"ved\", \"drva\", \"veda\", \"drev\", \"repa\", \"lada\", \"vre\", \"apel\", \"pravda\", \"pre\", \"ala\", \"ped\", \"ave\", \"reva\", \"ver\", \"pedal\", \"perla\", \"pav\", \"rap\", \"lava\", \"varda\", \"pera\", \"vedra\", \"rave\", \"vrela\", \"pad\", \"pala\", \"rapa\", \"delava\", \"avla\", \"ara\", \"area\", \"avra\", \"perl\", \"adler\", \"earl\", \"var\", \"pava\", \"preval\", \"deva\", \"prevala\", \"ava\", \"plav\", \"padar\", \"lavra\", \"apela\", \"lera\", \"vrl\", \"rape\", \"alva\", \"vrel\", \"areal\", \"arpa\", \"vpad\", \"drap\", \"vada\", \"ral\", \"dra\", \"vpadel\", \"pled\", \"drav\", \"adra\"]}\n                         ];\n        const idx = Math.floor(Math.random() * crosswords.length);\n        this.state = {\n            crossword: crosswords[idx]\n        }\n    }\n\n    render() {\n        return (\n            <Game\n                crossword={this.state.crossword}\n                hintLimit={5}\n            />\n        )\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}